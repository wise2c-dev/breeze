---
# kuryr-config-map
apiVersion: v1
kind: ConfigMap
metadata:
  name: cni
  namespace: kube-system
data:
  kuryr.conf: |
    [DEFAULT]
    debug                  = true
    use_syslog             = true
    [cni_health_server]
    port = 28090
    [oslo_concurrency]
    lock_path              = /tmp
    #bindir                = /root/kuryr-k8s-controller/env/libexec/kuryr
    use_stderr             = true
    [cni_daemon]
    vif_annotation_timeout = 600
    pyroute2_timeout       = 100
    docker_mode            = true
    netns_proc_dir         = /host_proc
    [vif_plug_ovs_privileged]
    helper_command         = privsep-helper
    [kubernetes]
    api_root               = https://{{ k8s_master }}:6443
    token_file             = /var/run/secrets/kubernetes.io/serviceaccount/token
    ssl_ca_crt_file        = /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    ssl_verify_server_crt  = true
---
# kuryr-cni
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cni-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: cni-role
rules:
- apiGroups:
  - ""
  verbs: ["*"]
  resources:
    - endpoints
    - configmaps
    - pods
    - services
    - services/status
    - nodes
- apiGroups:
  - "apps"
  verbs: ["*"]
  resources:
    - deployments
- apiGroups:
  - "extensions"
  verbs: ["*"]
  resources:
    - ingress
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: cni-sa-global
subjects:
- kind: ServiceAccount
  name: cni-sa
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: cni-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kuryr-cni
  namespace: kube-system
  labels:
    tier: node
    app: kuryr
spec:
  template:
    metadata:
      labels:
        tier: node
        app: kuryr
    spec:
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: cni-sa
      containers:
      - name: kuryr-cni
        image: {{ registry_endpoint }}/{{ registry_project }}/kuryr-cni:{{ kuryr_version }}
        imagePullPolicy: IfNotPresent
        command: ["cni_ds_init"]
        ports:
        - containerPort: 28090
          name: health
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /alive
            port: health
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: health
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 15
        env:
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KURYR_CNI_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        securityContext:
          privileged: true
        volumeMounts:
        - name: bin
          mountPath: /opt/cni/bin
        - name: net-conf
          mountPath: /etc/cni/net.d
        - name: pki
          mountPath: /etc/kubernetes/pki
          readOnly: true
        - name: cni
          mountPath: /etc/kuryr/kuryr.conf
          subPath: kuryr.conf
        - name: proc
          mountPath: /host_proc
        - name: openvswitch
          mountPath: /var/run/openvswitch
        - name: syslog
          mountPath: /dev/log

      volumes:
        - name: pki
          hostPath:
            path: /etc/kubernetes/pki
        - name: bin
          hostPath:
            path: /opt/cni/bin
        - name: net-conf
          hostPath:
            path: /etc/cni/net.d
        - name: cni
          configMap:
            name: cni
        - name: proc
          hostPath:
            path: /proc 
        - name: openvswitch
          hostPath: 
            path: /var/run/openvswitch
        - name: syslog
          hostPath: 
            path: /dev/log
---
# kuryr-operator
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zone-crd
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: zone-crd
rules:
- apiGroups:
  - "wise2c.com"
  verbs: ["*"]
  resources:
    - neutrons
    - zones
- apiGroups:
  - ""
  verbs: ["*"]
  resources:
    - configmaps
    - pods
- apiGroups:
  - "apps"
  verbs: ["*"]
  resources:
    - deployments
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: zone-crd-global
subjects:
- kind: ServiceAccount
  name: zone-crd
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: zone-crd
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    name: zone-crd
  name: zone-crd
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: zone-crd
      name: zone-crd
    spec:
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: zone-crd
      automountServiceAccountToken: true
      containers:
      - image: {{ registry_endpoint }}/{{ registry_project }}/zone_crd:{{ kuryr_version }}
        name: zone-crd-pod
        imagePullPolicy: IfNotPresent
        command: ["/zone_crd"]
        args:
        - -kubeconfig=inCluster
        - -kns=kube-system
        - -image={{ registry_endpoint }}/{{ registry_project }}/kuryr-controller:{{ kuryr_version }}
        - -limage={{ registry_endpoint }}/{{ registry_project }}/leader-elector:0.5
        terminationMessagePath: "/dev/termination-log"
      restartPolicy: Always
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: zones.wise2c.com
spec:
  version: v1
  group: wise2c.com
  scope: Cluster
  names:
    kind: Zone
    listKind: ZoneList
    plural: zones
    singular: zone
  validation:
    openAPIV3Schema:
      required: ["spec"]
      properties:
        spec:
          required: ["k8s", "neutron_defaults"]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: neutrons.wise2c.com
spec:
  version: v1
  group: wise2c.com
  scope: Cluster
  names:
    kind: Neutron
    listKind: NeutronList
    plural: neutrons
    singular: neutron
  validation:
    openAPIV3Schema:
      required: ["spec"]
      properties:
        spec:
          required: ["keystone"]