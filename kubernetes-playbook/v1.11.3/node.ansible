- name: pull k8s pause images
  docker_image:
    name: '{{ registry_endpoint }}/{{ registry_project }}/{{ item.name }}'
    tag: '{{ item.tag }}'
    pull: true
    state: present
  with_items:
  - { repo: '{{ kubernetes_repo }}', name: 'pause', tag: '{{ pause_version }}' }

- name: tag k8s pause images
  docker_image:
    name: '{{ item.repo }}/{{ item.name }}'
    repository: '{{ kubernetes_repo }}/pause:{{ pause_version }}'
    tag: '{{ item.tag }}'
  with_items:
  - { repo: '{{ registry_endpoint }}/{{ registry_project }}', name: 'pause', tag: '{{ pause_version }}' }

- name: ipvs config
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/ipvs.modules', dest: '/etc/sysconfig/modules'}

- name: setup ipvs
  shell: |
    chmod +x /etc/sysconfig/modules/ipvs.modules 
    bash /etc/sysconfig/modules/ipvs.modules
      
- name: copy k8s admin.conf
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/admin.conf', dest: '{{ ansible_env.HOME }}/.kube/config' }

- name: setup node
  shell: |
    kubeadm join --token {{ token }} {{ endpoint }} --discovery-token-unsafe-skip-ca-verification {{ endpoint }} --feature-gates=CoreDNS=false 
    sed -i "s/.*server:.*/    server: https:\/\/{{ endpoint }}/g" /etc/kubernetes/kubelet.conf
    cp {{ path }}/admin.conf $HOME/.kube/config
    chown $(id -u):$(id -g) $HOME/.kube/config

- name: restart kubelet
  systemd: 
    name: kubelet
    state: restarted
