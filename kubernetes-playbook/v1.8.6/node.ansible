- name: pull k8s pause images
  docker_image:
    name: '{{ registry_endpoint }}/{{ registry_project }}/{{ item.name }}'
    tag: '{{ item.tag }}'
    pull: true
    state: present
  with_items:
  - { repo: '{{ kubernetes_repo }}', name: 'pause-amd64', tag: '{{ pause_version }}' }

- name: tag k8s pause images
  docker_image:
    name: '{{ item.repo }}/{{ item.name }}'
    repository: '{{ kubernetes_repo }}/pause-amd64:{{ pause_version }}'
    tag: '{{ item.tag }}'
  with_items:
  - { repo: '{{ registry_endpoint }}/{{ registry_project }}', name: 'pause-amd64', tag: '{{ pause_version }}' }


- name: setup node
  shell: |
    kubeadm join --token {{ token }} {{ endpoint }}
    #sed -i "s/.*server:.*/    server: https:\/\/{{ endpoint }}/g" /etc/kubernetes/kubelet.conf

- name: copy admin.conf
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/admin.conf', dest: '{{ path }}/' }
  when: support_kubecmd 

- name: config kubectl
  shell: |
    mkdir -p $HOME/.kube/
    cp {{ path }}/admin.conf $HOME/.kube/config    
    chown $(id -u):$(id -g) $HOME/.kube/config
  when: support_kubecmd

- name: update the k8s lb address
  shell: |
    for i in {1..30}; do
        if [ -f /etc/kubernetes/kubelet.conf ]; then
            sed -i "s/.*server:.*/    server: https:\/\/{{ endpoint }}/g" /etc/kubernetes/kubelet.conf
            break
        else
            echo "wait...$i"
            sleep 1
        fi
    done;

# - name: change kubelet.conf's endpoint to web's endpoint
#   lineinfile:
#     dest: /etc/kubernetes/kubelet.conf
#     regexp: "server:"
#     line: "    server: https://{{ endpoint }}"  

- name: restart kubelet
  systemd: 
    name: kubelet
    state: restarted